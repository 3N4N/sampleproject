[project]
name = "sampleproject"  # Required
version = "3.0.0"  # Required
description = "A sample Python project"  # Optional
readme = "README.md" # Optional
requires-python = ">=3.6"
license = {file = "LICENSE.txt"}
keywords = ["sample", "setuptools", "development"]  # Optional
authors = [
  {name = "A. Random Developer", email = "author@example.com" } # Optional
]
maintainers = [
  {name = "A. Great Maintainer", email = "maintainer@example.com" } # Optional
]

classifiers = [  # Optional
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",

  # Pick your license as you wish
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]

dynamic = ["dependencies"]

[project.optional-dependencies] # Optional
dev = [
  "check-manifest",
  "numpy >= 1.20.0",
]
test = ["coverage"]

[project.urls]  # Optional
"Homepage" = "https://github.com/pypa/sampleproject"
"Bug Reports" = "https://github.com/pypa/sampleproject/issues"
"Funding" = "https://donate.pypi.org"
"Say Thanks!" = "http://saythanks.io/to/example"
"Source" = "https://github.com/pypa/sampleproject/"

# The following would provide a command line executable called `sample`
# which executes the function `main` from this package when invoked.
# [project.scripts]  # Optional
# sample = "sample:main"

# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
# [tool.setuptools]
# package-data = {"sample" = ["*.dat"]}

[tool.setuptools.packages.find]
where = ["src"]
include = ["sample"]
exclude = ["tests", "lib"]
namespaces = false

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[build-system]
requires = [
  "wheel",
  "setuptools>=61;python_version>='3.8'",
  "setuptools>=40;python_version=='3.6'",
  "../setuptools-movandi.git/callable-parser/",
]
build-backend = "setuptools.build_meta"
